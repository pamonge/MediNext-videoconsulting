# Generated by Django 5.2.5 on 2025-09-16 19:53

import api_app.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Beneficio',
                'verbose_name_plural': 'Beneficios',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(choices=[('a', 'Activo'), ('d', 'Inactivo'), ('p', 'Pendiente'), ('s', 'Suspendido'), ('r', 'Revisión'), ('c', 'Cancelado'), ('e', 'En proceso'), ('f', 'Finalizado'), ('v', 'Vencido'), ('n', 'No aplica'), ('o', 'Otro'), ('b', 'Baja'), ('m', 'Mora'), ('t', 'Temporal'), ('u', 'Urgente'), ('i', 'Incompleto'), ('l', 'Lista'), ('q', 'En cola')], max_length=1)),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(max_length=8, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('c', 'Client'), ('d', 'Doctor'), ('a', 'Admin'), ('s', 'Staff')], default='c', max_length=1)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='El grupo al cual pertenece un usuario. Un usuario obtendrá todos los permisos de cada grupo al que pertenezca.', related_name='custom_user_groups', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos especificos para un usuario en particular', related_name='custom_user_permissions', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['dni'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_type', models.CharField(choices=[('consult', 'Consulta'), ('diagnosis', 'Diagnóstico'), ('treatment', 'Tratamiento'), ('surgery', 'Cirugía'), ('control', 'Control'), ('emergency', 'Emergencia')], default='consult', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('treatment', models.TextField(blank=True, null=True)),
                ('prescriptions', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('consultation_date', models.DateTimeField()),
                ('next_control_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'd'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_histories_as_doctor', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(limit_choices_to={'user_type': 'c'}, on_delete=django.db.models.deletion.CASCADE, related_name='medical_histories_as_patient', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_histories', to='api_app.status')),
            ],
            options={
                'verbose_name': 'Historia Médica',
                'verbose_name_plural': 'Historias Médicas',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro'), ('N', 'Prefiero no decir')], max_length=1, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('s', 'Soltero'), ('m', 'Casado'), ('w', 'Viudo'), ('d', 'Divorciado'), ('c', 'Concubinato'), ('o', 'Otro')], max_length=1, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, choices=[('mu', 'Maipu'), ('sr', 'San Rafael'), ('cp', 'Capital'), ('gu', 'Guaymallen'), ('gc', 'Godoy Cruz'), ('sm', 'San Martin'), ('lh', 'Las Heras'), ('tn', 'Tunuyan'), ('ri', 'Rivadavia'), ('ju', 'Junin'), ('ga', 'Gral Alvear'), ('sc', 'San Carlos'), ('to', 'Tupungato'), ('la', 'Lavalle'), ('me', 'Malargue'), ('lp', 'La Paz'), ('sa', 'Santa Rosa')], max_length=2, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=4, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=api_app.models.user_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiles', to='api_app.status')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'ordering': ['user__dni'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField()),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia'), ('other', 'Otro')], max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='api_app.status')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(max_length=25, unique=True)),
                ('plan_name', models.CharField(max_length=100)),
                ('plan_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('plan_detail', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('benefits', models.ManyToManyField(related_name='plans', to='api_app.benefit')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_plans', to='api_app.status')),
            ],
            options={
                'verbose_name': 'Plan Médico',
                'verbose_name_plural': 'Planes Médicos',
            },
        ),
        migrations.CreateModel(
            name='MedicalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('lab', 'Laboratorio'), ('image', 'Imagen'), ('scan', 'Escáner'), ('xray', 'Radiografía'), ('ultrasound', 'Ultrasonido'), ('prescription', 'Receta'), ('report', 'Reporte'), ('other', 'Otro')], max_length=20)),
                ('file', models.FileField(upload_to=api_app.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx', 'txt'])])),
                ('description', models.TextField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('medical_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='api_app.medicalhistory')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_files', to='api_app.status')),
            ],
            options={
                'verbose_name': 'Archivo Médico',
                'verbose_name_plural': 'Archivos Médicos',
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('authorization', 'Autorización'), ('document', 'Documento'), ('id', 'Identificación'), ('insurance', 'Seguro'), ('other', 'Otro')], max_length=20)),
                ('description', models.TextField()),
                ('file', models.FileField(upload_to=api_app.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_files', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_files', to='api_app.status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Archivo',
                'verbose_name_plural': 'Archivos',
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_plans', to='api_app.medicalplan')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_plans', to='api_app.status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Plan Usuario',
                'verbose_name_plural': 'Planes Usuarios',
            },
        ),
    ]
